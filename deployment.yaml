apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  ports:
    - port: 8080
      protocol: TCP
  selector:
    app: nginx
---
apiVersion: v1
kind: Service
metadata:
  name: golang
  labels:
    app: golang
spec:
  ports:
    - port: 8090
      protocol: TCP
  selector:
    app: golang
---
apiVersion: v1
kind: Service
metadata:
  name: locust
  labels:
    app: locust
spec:
  ports:
    - port: 8089
      protocol: TCP
  clusterIP: None
  selector:
    app: locust
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      initContainers:
        - name: wait-for-golang
          image: curlimages/curl:latest
          command: [ "/bin/sh","-c" ]
          args: [ "while [ $(curl -sw '%{http_code}' http://golang:8090 -o /dev/null) -ne 200 ]; do sleep 5; echo 'Waiting for the webserver...'; done" ]
      containers:
        - name: nginx
          image: nginx:1.21.3
          lifecycle:
            preStop:
              exec:
                command:
                  - /usr/sbin/nginx
                  - -s
                  - quit
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /etc/nginx
              readOnly: true
              name: nginx-conf
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }
    http {
      server {
        listen 8080;
        server_name _;
        location / {
          proxy_pass http://golang:8090;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: golang
  labels:
    app: golang
spec:
  replicas: 1
  selector:
    matchLabels:
      app: golang
  template:
    metadata:
      labels:
        app: golang
    spec:
      containers:
        - name: golang
          image: golang
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/bash
                  - -c
                  - /bin/sleep 1; kill -QUIT 1
          resources:
            limits:
              cpu: 5m # 0.005 CPU (500 out of 100000 microseconds of CPU time)
              memory: 6Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: locust
  labels:
    app: locust
spec:
  replicas: 1
  selector:
    matchLabels:
      app: locust
  template:
    metadata:
      labels:
        app: locust
    spec:
      containers:
      - name: locust
        image: locust
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: golang
spec:
  scaleTargetRef:
    apiVersion: apps/v1beta1
    kind: Deployment
    name: golang
  minReplicas: 1
  maxReplicas: 20
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 50
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: 50
